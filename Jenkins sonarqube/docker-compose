version: "3.8"

services:
  jenkins:
    container_name: jenkins_container
    image: jenkins/jenkins:lts
    restart: on-failure
    ports:
      - "8085:8080"
      - "50000:50000"
    volumes:
      - jenkins_data:/var/jenkins_home
    networks:
      - devops

  postgres:
    container_name: postgres_container
    image: postgres:12
    environment:
      POSTGRES_USER: "sonar"
      POSTGRES_PASSWORD: "sonar"
      POSTGRES_DB: "sonar"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sonar -d sonar"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - devops

  sonarqube:
    container_name: sonarqube_container
    image: sonarqube:community
    ports:
      - "9000:9000"
    environment:
      SONAR_JDBC_URL: "jdbc:postgresql://postgres_container:5432/sonar"
      SONAR_JDBC_USERNAME: "sonar"
      SONAR_JDBC_PASSWORD: "sonar"
    depends_on:
      postgres:
        condition: service_healthy
    restart: always
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_logs:/opt/sonarqube/logs
      - sonarqube_extensions:/opt/sonarqube/extensions
    networks:
      - devops

networks:
  devops:
    driver: bridge

volumes:
  jenkins_data:
  postgres_data:
  sonarqube_data:
  sonarqube_logs:
  sonarqube_extensions:
root@VM2:~/ansible/devtools# 